name: Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade setuptools wheel

      - name: Build wheel
        run: |
          python setup.py bdist_wheel

  upload_wheels_linux:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    steps:
      - name: Download Linux wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install twine
        run: python -m pip install twine

      - name: Publish Linux wheels to Test PyPI
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*-linux_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  upload_wheels_windows_macos:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    steps:
      - name: Download Windows and macOS wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install twine
        run: python -m pip install twine

      - name: Publish Windows and macOS wheels to Test PyPI
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*-win_*.whl dist/*-macos_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
